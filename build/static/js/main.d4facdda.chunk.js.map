{"version":3,"sources":["components/Nav/burger_queen.png","utils/firebase.js","components/Card/card.js","components/Button/button.js","components/Input/input.js","components/Menu/menu.js","pages/kitchen.js","pages/service.js","components/Nav/nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Card","props","onClick","handleClick","class","value","state","id","placeholder","name","price","toLocaleString","src","image","Button","className","text","Input","onChange","handleChange","Menu","useState","client","setClient","table","setTable","order","setOrder","item1","setItem1","item2","setItem2","useEffect","firestore","collection","get","then","snapshot","breakfast","docs","filter","doc","data","map","lunch","add","item","includes","count","total","reduce","acc","key","style","currency","product","index","e","preventDefault","remove","findIndex","splice","deleteItem","addmenoss","addmenos","type","currentTarget","parseInt","Kitchen","Service","Nav","Logo","alt","width","to","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4facdda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger_queen.fdbde487.png\";","import firebase from 'firebase';\nimport 'firebase/firestore';\n\n\nconst config = {\n    apiKey: \"AIzaSyC4BoOnDoPdHro1uH_Ulm4gaJtyvQoyVes\",\n    authDomain: \"burger-queen-lab03.firebaseapp.com\",\n    databaseURL: \"https://burger-queen-lab03.firebaseio.com\",\n    projectId: \"burger-queen-lab03\",\n    storageBucket: \"burger-queen-lab03.appspot.com\",\n    messagingSenderId: \"317972441220\",\n    appId: \"1:317972441220:web:c991caeb12a41e5ee27ad1\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react'\n\n\nfunction Card(props) {\n    return (\n        <div onClick={props.handleClick} class=\"menu-card\" value={props.state} id={props.id} placeholder={props.placeholder}>\n            <p class=\"name\">{props.name}</p>\n            <p class=\"price\">{props.price.toLocaleString('pt-BR')}</p>\n            <img src={props.image} class=\"image\"/>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react';\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.handleClick} className='button'>{props.text} </button>\n    );\n}\n\nexport default Button;","import React from 'react'\n\nconst Input = (props) => {\n    return(\n        <input placeholder={props.placeholder} value={props.state} id={props.id} onChange={props.handleChange} className='input'></input>\n    )\n}\n\nexport default Input;","import React, { useEffect, useState } from 'react';\nimport firebase from '../../utils/firebase.js';\nimport Card from '../Card/card.js';\nimport Button from '../Button/button.js'\nimport Input from '../Input/input.js'\nimport '../Card/card.css'\nimport '../Menu/menu.css'\nimport { element } from 'prop-types';\n\nconst Menu = () => {\n  const [client, setClient] = useState('');\n  const [table, setTable] = useState('');\n  const [order, setOrder] = useState([]);\n  const [item1, setItem1] = useState([]);\n  const [item2, setItem2] = useState([]);\n\n\n  useEffect(() => {\n    firebase.firestore().collection('menu')\n      .get().then((snapshot) => {\n        const breakfast = snapshot.docs.filter(doc => doc.data().breakfast).map((doc) => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        setItem1(breakfast)\n\n        const lunch = snapshot.docs.filter(doc => doc.data().lunch).map((doc) => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        setItem2(lunch)\n      })\n  }, [])\n\n\n\n  function onSubmit(e) {\n    e.preventDefault()\n    firebase.firestore().collection('client').add({\n      client,\n      table: parseInt(table),\n      order\n    }).then(() => {\n      setTable('')\n      setClient('')\n      setOrder([])\n    })\n  }\n\n  const add = (item) => {\n    setOrder([...order, item])\n    if (!order.includes(item)) {\n      item.count = 1;\n      setOrder([...order, item])\n    }\n    else {\n      item.count += 1;\n      setOrder([...order])\n    }\n  }\n\n  const addmenos = (item) => {\n    if(item.count === 1) {\n      const addmenoss = order.filter(product => {\n        return product != item\n      })\n      setOrder([...addmenoss])\n    } else {\n    item.count --\n    setOrder([...order])\n    }\n  }\n\n  const deleteItem = (item) => {\n    const remove = (order.findIndex((e) => e.name == item.name))\n    order.splice(remove, 1);\n    setOrder([...order]);\n  }\n\n  const total = order.reduce((acc, item) => acc + (item.count * item.price), 0)\n\n\n  return (\n    <>\n      <section class=\"menu-breakfast\">\n        <div className='menu.item'>\n          <p class=\"breakfast\">MENU DE CAFÉ DA MANHÃ</p>\n          {item1.map((breakfast) => <Card handleClick={() => add(breakfast)} key={breakfast.id} name={breakfast.name} price={breakfast.price.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})} image={breakfast.image} />)}\n        </div>\n      </section>\n      <section class=\"menu-lunch\">\n        <div className='menu.lunch'>\n          <p class=\"lunch\">MENU TRADICIONAL</p>\n          {item2.map((lunch) => <Card handleClick={() => add(lunch)} key={lunch.id} name={lunch.name} price={lunch.price.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})} image={lunch.image} />)}\n        </div>\n      </section>\n      <section class=\"order\">\n        <div>\n          <p>PEDIDO</p>\n          {order.map((product, index) => <div key={product.id + index}> {product.name} {product.price.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})} {product.count}\n            <Button id='button-delete' handleClick={(e) => {\n              e.preventDefault();\n              deleteItem(product);\n            }} text={'deletar'} /><Button id=\"button-add\" handleClick={(e) => {add(product)}} text={'mais'} /><Button id=\"button-add\" handleClick={() => addmenos(product)} text={'menos'} /></div>)}\n          <p class=\"total\">{total.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})}</p>\n          <div>\n            <strong>CLIENTE</strong>\n          </div>\n          <Input id='input-number' type='text' state={client} handleChange={e => setClient(e.currentTarget.value)} />\n          <div>\n            <strong>MESA</strong>\n          </div>\n          <Input id='input-number' type='number' state={table} handleChange={e => setTable(e.currentTarget.value)} />\n\n          <Button id='button-send' handleClick={onSubmit} text={'enviar'} />\n        </div>\n\n      </section>\n    </>\n  );\n};\n\n\nexport default Menu\n","import React from 'react';\n\nfunction Kitchen () {\n    return (\n        <div> Pedido Aqui</div>\n    )\n}\n\nexport default Kitchen","import React, { useState, useEffect } from 'react';\nimport firebase from '../utils/firebase.js'\nimport Menu from '../components/Menu/menu.js'\n\nfunction Service() {\n\n  return (\n\n    <div>\n      <Menu />\n    </div>\n  );\n}\n\nexport default Service;","import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport '../Nav/nav.css'\nimport Logo from './burger_queen.png';\n\nfunction Nav () {\n    return(\n        <div class=\"nav\">\n            <div class=\"logo\">\n                <img src={Logo} alt=\"logo\" width={\"100px\"} />\n            </div>\n            <nav>\n            <ul>\n                <li>\n                    <Link to=\"/service\" className='link'>RESTAURANTE</Link>\n                </li>\n                <li>\n                    <Link to=\"/kitchen\" className='link'>COZINHA</Link>\n                </li>\n            </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default Nav","import React from 'react';\n//import './App.css';\nimport Menu from './components/Menu/menu.js'\nimport './components/Card/card.css'\nimport Kitchen from './pages/kitchen.js'\nimport Service from './pages/service.js'\nimport Nav from './components/Nav/nav.js'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n  <Router>\n    <div>\n      <Nav />\n      <Switch>\n        <Route path=\"/service\" component={Service} />\n        <Route path=\"/kitchen\" component={Kitchen} />\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}